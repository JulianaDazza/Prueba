
package co.com.hyunseda.market.presentation;

import co.com.hyunseda.market.domain.Carrito;
import co.com.hyunseda.market.domain.Product;
import co.com.hyunseda.market.infra.Observer;
import co.com.hyunseda.market.service.CarritoService;
import co.com.hyunseda.market.service.ProductService;
//import com.unicauca.pay.crudproducts.core.PayCore;
import java.io.File;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author ACER
 */
public class GUIListProductsCar extends javax.swing.JFrame implements Observer{
    
    ProductService productService;
    CarritoService carritoService;
    private GUIStoreProducts objStore;
    /**
     * Creates new form GUIListProductsCar
     * @param prmItem
     * @param prmSt
     */
    public GUIListProductsCar(CarritoService prmItem, GUIStoreProducts prmSt) {
        this.objStore = prmSt;
        this.carritoService = prmItem;
        initComponents();
        initializeTable();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pnlCenter = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducts = new javax.swing.JTable();
        panel1 = new java.awt.Panel();
        panel4 = new java.awt.Panel();
        lblNumCuenta = new javax.swing.JLabel();
        panel5 = new java.awt.Panel();
        btnCancelar = new javax.swing.JButton();
        btnPay = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        lblTotalPrice = new javax.swing.JLabel();
        txtNumCuenta = new javax.swing.JTextField();
        cbxMetodoPago = new javax.swing.JComboBox<>();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Lista de Productos");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        pnlCenter.setLayout(new java.awt.GridLayout(1, 0));

        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Producto", "Precio", "Cantidad"
            }
        ));
        jScrollPane1.setViewportView(tblProducts);

        pnlCenter.add(jScrollPane1);

        getContentPane().add(pnlCenter, java.awt.BorderLayout.CENTER);

        panel1.setLayout(new java.awt.BorderLayout());

        lblNumCuenta.setText("Cuenta:");
        panel4.add(lblNumCuenta);

        panel1.add(panel4, java.awt.BorderLayout.WEST);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        panel5.add(btnCancelar);

        btnPay.setText("Pagar");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        panel5.add(btnPay);

        lblTotal.setText("Total:");
        panel5.add(lblTotal);

        lblTotalPrice.setText("0");
        panel5.add(lblTotalPrice);

        panel1.add(panel5, java.awt.BorderLayout.SOUTH);
        panel1.add(txtNumCuenta, java.awt.BorderLayout.CENTER);

        cbxMetodoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Googlepay", "Stripe", "Paypal" }));
        panel1.add(cbxMetodoPago, java.awt.BorderLayout.EAST);

        getContentPane().add(panel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
       objStore.cleanItemList();
       this.dispose();
        
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        // TODO add your handling code here:
        double total = Double.parseDouble(lblTotalPrice.getText());
        if(total == 0){
            JOptionPane.showMessageDialog(null, "No ha seleccionado ningun producto.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String codigoCuenta = txtNumCuenta.getText();
        if("".equals(codigoCuenta))
        {
            JOptionPane.showMessageDialog(null, "No digitó número de cuenta", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Object selectedObject = cbxMetodoPago.getSelectedItem();
        String metodoPago = selectedObject.toString();
        
        
    }//GEN-LAST:event_btnPayActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnPay;
    private javax.swing.JComboBox<String> cbxMetodoPago;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNumCuenta;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalPrice;
    private java.awt.Panel panel1;
    private java.awt.Panel panel4;
    private java.awt.Panel panel5;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JTable tblProducts;
    private javax.swing.JTextField txtNumCuenta;
    // End of variables declaration//GEN-END:variables

     private void initializeTable() {
        tblProducts.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Name", "Price","Description","Stock"
                }
        ));
    }
    
    
    
    /*private void fillTable(List<Carrito> o)
    {
        initializeTable();
        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();

        Object rowData[] = new Object[3];//No columnas
        
            for(int i = 0 ; i < o.size();i++)
            {
             rowData[0] = o.get(i).getProductos().getName();
             rowData[1] = o.get(i).getProductos().getPrice();
             rowData[2] = o.get(i).getTotalArticulos();
             
             model.addRow(rowData);
             
             System.out.println("Artículo: "+o.get(i).getProductos().getName());
             System.out.println("Total a Comprar: "+  o.get(i).getTotalArticulos());
            }
       
    }*/
    
    private void loadData(List<Carrito> o) {
        initializeTable();
        DefaultTableModel model = (DefaultTableModel) tblProducts.getModel();

        Object rowData[] = new Object[8];//No columnas
        for (int i = 0; i < o.size(); i++) {
            rowData[0] = o.get(i).getProducto().getProductId();
            rowData[1] = o.get(i).getProducto().getProductName();
            rowData[2] = "" + o.get(i).getProducto().getProductPrice();
            rowData[3] = o.get(i).getProducto().getProductDescription();
            rowData[4] = "" + o.get(i).getProducto().getProductStock();

            model.addRow(rowData);
        }
    }
    
     private void totalPrecio(List<Carrito> o){
            double total=0;
            for(int i = 0; i < o.size();i++){
                total += o.get(i).getProducto().getProductPrice();
            }
            lblTotalPrice.setText(String.valueOf(total));
        }
    /*private void totalPrecio(List<Carrito> o){
            double total=0;
            for(int i = 0; i < o.size();i++){
                total += o.get(i).getProductos().getPrice();
            }
            lblTotalPrice.setText(String.valueOf(total));
        }
    
        private String getBaseFilePath() {
        try {
            String path = ClientMain.class.getProtectionDomain().getCodeSource().getLocation().getPath();
            path = URLDecoder.decode(path, "UTF-8"); //This should solve the problem with spaces and special characters.
            File pathFile = new File(path);
            if (pathFile.isFile()) {
                path = pathFile.getParent();
                
                if (!path.endsWith(File.separator)) {
                    path += File.separator;
                }
            }

            return path;
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(PayCore.class.getName()).log(Level.SEVERE, "Error al eliminar espacios en la ruta del archivo", ex);
            return null;
        }
 }*/
    /*@Override
    public void update(Object o) {
        this.setVisible(true);
        CarritoService itemService = (CarritoService) o;
        fillTable(itemService.getItemList());
        totalPrecio(itemService.getItemList());
    }*/

    @Override
    public void update(Object o) {
        this.setVisible(true);
        CarritoService itemService = (CarritoService) o;
        loadData(itemService.getItemList());
        totalPrecio(itemService.getItemList());
    }
    
}
