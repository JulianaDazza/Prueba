package co.com.hyunseda.market.presentation;

import co.com.hyunseda.market.domain.Category;
import co.com.hyunseda.market.domain.Product;
import co.com.hyunseda.market.service.CategoryService;
import co.com.hyunseda.market.service.ProductService;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;

/**
 *
 * @author Libardo Pantoja, Julio A. Hurtado
 */
public class GUIAddProduct extends javax.swing.JFrame {
    ProductService productService;
    CategoryService categoryService;
    private boolean addOption;

    /**
     * Creates new form GUIProducts
     */
    public GUIAddProduct(ProductService productService, CategoryService categoryService) {
        initComponents();
        this.productService = productService;
         this.categoryService = categoryService;
        //stateInitial();
        stateNew();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        checkbox1 = new java.awt.Checkbox();
        pnlSouth = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        pnlCenter = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panel1 = new java.awt.Panel();
        chbChales = new java.awt.Checkbox();
        chbRuanas = new java.awt.Checkbox();
        chbPonchos = new java.awt.Checkbox();
        chbBufandas = new java.awt.Checkbox();
        chbAretes = new java.awt.Checkbox();
        chbPanoletas = new java.awt.Checkbox();
        lblProductId = new javax.swing.JLabel();
        txtProductId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        checkbox1.setLabel("checkbox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Productos");

        pnlSouth.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        pnlSouth.add(btnNuevo);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCancelar);

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        pnlSouth.add(btnCerrar);

        getContentPane().add(pnlSouth, java.awt.BorderLayout.SOUTH);

        pnlCenter.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlCenter.setLayout(new java.awt.GridLayout(5, 2));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("*Categoria:");
        pnlCenter.add(jLabel1);

        chbChales.setLabel("Chales");
        panel1.add(chbChales);

        chbRuanas.setLabel("Ruanas");
        panel1.add(chbRuanas);

        chbPonchos.setLabel("Ponchos");
        panel1.add(chbPonchos);

        chbBufandas.setLabel("Bufandas");
        panel1.add(chbBufandas);

        chbAretes.setLabel("Aretes");
        panel1.add(chbAretes);

        chbPanoletas.setLabel("Pañoletas");
        panel1.add(chbPanoletas);

        pnlCenter.add(panel1);

        lblProductId.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblProductId.setText("*Id:");
        pnlCenter.add(lblProductId);
        pnlCenter.add(txtProductId);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("*Nombre:");
        pnlCenter.add(jLabel2);
        pnlCenter.add(txtName);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("*Descripción:");
        pnlCenter.add(jLabel3);

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        pnlCenter.add(jScrollPane1);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("*Precio:");
        pnlCenter.add(jLabel5);
        pnlCenter.add(txtPrice);

        getContentPane().add(pnlCenter, java.awt.BorderLayout.CENTER);

        jLabel4.setFont(new java.awt.Font("Segoe UI Emoji", 3, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Menú de Productos");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(jLabel4, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        //stateNew();
        addOption = true;
        if (txtProductId.getText().trim().equals("") || txtName.getText().trim().equals("") || txtDescription.getText().trim().equals("") || txtPrice.getText().trim().equals("")) {
            Messages.showMessageDialog("Debe ingresar todos los datos del producto", "Atención");
            txtProductId.requestFocus();
            txtName.requestFocus();
            txtDescription.requestFocus();
            txtPrice.requestFocus();
            return;
        }
        if (addOption) {
            //Agregar
            addProduct();

        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        //stateInitial();
        cleanControls();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
       GUIProductsMenu pMenu = new GUIProductsMenu(productService);
       pMenu.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed
    private void stateEdit() {
        btnNuevo.setVisible(false);
        btnCancelar.setVisible(true);
        btnCerrar.setVisible(false);
        //txtId.setEnabled(false);
        txtName.setEnabled(true);
        txtDescription.setEnabled(true);
        txtPrice.setEnabled(true);
    }

    private void stateInitial() {
        btnNuevo.setVisible(true);
        btnCancelar.setVisible(false);
        btnCerrar.setVisible(true);
        txtProductId.setEnabled(false);
        txtName.setEnabled(false);
        txtDescription.setEnabled(false);
        txtPrice.setEnabled(false);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private java.awt.Checkbox chbAretes;
    private java.awt.Checkbox chbBufandas;
    private java.awt.Checkbox chbChales;
    private java.awt.Checkbox chbPanoletas;
    private java.awt.Checkbox chbPonchos;
    private java.awt.Checkbox chbRuanas;
    private java.awt.Checkbox checkbox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblProductId;
    private java.awt.Panel panel1;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlSouth;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductId;
    // End of variables declaration//GEN-END:variables

    private void stateNew() {
        btnNuevo.setVisible(true);
        btnCancelar.setVisible(true);
        btnCerrar.setVisible(true);
        txtProductId.setEnabled(true);
        txtName.setEnabled(true);
        txtDescription.setEnabled(true);
        txtPrice.setEnabled(true);

    }

    private void cleanControls() {
        chbChales.setState(false);
        chbRuanas.setState(false);
        chbPonchos.setState(false);
        chbBufandas.setState(false);
        chbAretes.setState(false);
        chbPanoletas.setState(false);
        txtProductId.setText("");
        txtName.setText("");
        txtDescription.setText("");
        txtPrice.setText("");
    }

    private void addProduct() {
        /*List<String> categories = new ArrayList<>();
        // Recuperar categorías seleccionadas de la interfaz gráfica
        
        if(chbChales.getState()) {
            categories.add(chbChales.getLabel());
        }
        if(chbRuanas.getState()) {
            categories.add(chbRuanas.getLabel());
        }
        if(chbPonchos.getState()) {
            categories.add(chbPonchos.getLabel());
        }
        if(chbBufandas.getState()) {
            categories.add(chbBufandas.getLabel());
        }
        if(chbAretes.getState()) {
            categories.add(chbAretes.getLabel());
        }
        if(chbPanoletas.getState()) {
            categories.add(chbPanoletas.getLabel());
        }
        // Verificar si se seleccionó al menos una categoría
        if (categories.isEmpty()) {
            Messages.showMessageDialog("Debe seleccionar al menos 1 categoria", "Atención!");
            return; // Salir del método si no hay categorías seleccionadas
        }*/

        // Obtener valores de los campos de texto
        String id = txtProductId.getText().trim();
        int idProduct = Integer.parseInt(id);
        String name = txtName.getText().trim();
        String description = txtDescription.getText().trim();
        double price = Double.parseDouble(txtPrice.getText());
        
        /*// Crear lista de categorías para el producto
        List<Category> productCategories = new ArrayList<>();
            for (String categoryName : categories) {
                Category category = new Category(categoryName);
                productCategories.add(category);
            }*/

        // Realizar una solicitud al backend para obtener una lista actualizada de productos
        List<Product> products = productService.listProducts();
        
        // Verificar si el ID ingresado ya está en uso
        boolean idExists = products.stream().anyMatch(product -> product.getProductId() == idProduct);
        if (idExists) {
            Messages.showMessageDialog("El ID del producto ya existe", "ERROR DE ENTRADA");
            return;
        }
        
        
        // Crear objeto Product con los atributos recuperados
        Product product = new Product(idProduct, name, description, price, 1/*, productCategories*/);
            
        if (productService.saveProduct(product)) {
            Messages.showMessageDialog("Se grabó con éxito", "Atención");
            cleanControls();
            //stateInitial();
        }
        else {
            Messages.showMessageDialog("Error al grabar, lo siento mucho", "Atención");
        }   
    }

}
